/*
 * Validatinator 
 * Simple yet effective vanilla JavaScript front-end validation add-on.
 * 01/08/2014
 */
 (function(window, undefined) {function Validatinator(a){this.validationInformation=void 0!==a?this.utils.convertFieldValidationsToArray(a):{},this.errors={},this.currentForm,this.currentField,this.validations.parent=this,this.validations.utils=this.utils,this.fails=function(a){this.getValidationArray(a)},this.passes=function(a){this.getValidationArray(a)},this.startValidations=function(a){var b,c,d=0;this.currentForm=a;for(fieldName in this.validationInformation[a])for(b=this.validationInformation[a][fieldName],this.currentField=fieldName;d<b.length;d++)c=this.getValidationMethodAndParameters(b[d])},this.getValidationMethodAndParameters=function(a){var b,c;return a.contains(":")?(b=a.split(":"),c=b.shift(),[c,this.prepareParameters(b)]):[a]},this.prepareParameters=function(a){for(var b=0,c=0;b<a.length;b++)if(a[b].contains(","))for(a[b]=a[b].split(",");c<a[b].length;c++)a[b][c]=this.utils.convertStringToBoolean(a[b][c].trim());else a[b]=this.utils.convertStringToBoolean(a[b].trim());return a},this.testValidationArray=function(a){var b,c,d,e,f;for(b=document.getElementsByName(this.currentValidatingForm)[0],d=document.getElementsByName(this.currentValidatingField),f=0;f<d.length;f++)if(e=d[f],e.form.name===this.currentValidatingForm){c=e.value;break}if(!c)throw new Error("Couldn't find the field element: "+this.currentValidatingField);for(j=0;j<a.length;j++){if(!(a[f]in this.validations))throw new Error("Validation does not exist: "+a[f]);this.validations[a[f]](c)}}}"object"==typeof window&&"object"==typeof window.document&&(window.Validatinator=Validatinator),String.prototype.contains||(String.prototype.contains=function(a,b){return-1!==String.prototype.indexOf.call(this,a,b)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(a,b){if(void 0===this||null===this)throw new TypeError('"this" is null or not defined');var c=this.length>>>0;for(b=+b||0,1/0===Math.abs(b)&&(b=0),0>b&&(b+=c,0>b&&(b=0));c>b;b++)if(this[b]===a)return b;return-1}),Validatinator.prototype.utils={convertFieldValidationsToArray:function(a){var b;for(formName in a)for(fieldName in a[formName])b=a[formName][fieldName],a[formName][fieldName]=b.contains("|")?b.split("|"):[b];return a},convertStringToBoolean:function(a){return"string"!=typeof a?a:"false"===a.toLowerCase()?!1:"true"===a.toLowerCase()?!0:a},isValueFalsyInNature:function(a,b){return(void 0===b||null===b)&&(b=!0),void 0===a||null===a||""===a?!0:b?!a:a===!1}},Validatinator.prototype.validations={accepted:function(a){return this.utils.isValueFalsyInNature(a)?!1:(a="string"==typeof a?a.toLowerCase():a,"yes"===a||"on"===a||a)},alpha:function(a){var b=/^[a-zA-Z]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},alphaDash:function(a){var b=/^[a-zA-Z-_]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},alphaNum:function(a){var b=/^[a-zA-Z-_0-9]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},between:function(a,b,c){var d=typeof a;if("number"!=typeof b||"number"!=typeof c)throw new Error("min and max must both be numbers in the `between` validation.");return"number"===d?a>=b&&c>=a:"string"===d?b<=a.length&&a.length<=c:!1},confirmed:function(a,b,c){return(void 0===c||null===c)&&(c=!0),a=String(a),b=String(b),c?a===b:a.toLowerCase()===b.toLowerCase()},contains:function(a,b){return-1!==b.indexOf(a)},different:function(a,b,c){return!this.confirmed(a,b,c)},digitsLength:function(a,b){if(void 0===b||null===b||"number"!=typeof b)throw new Error("length must be of numerical value in the `digitsLength` validation.");return"number"!=typeof a?!1:String(a).length===b},digitsLengthBetween:function(a,b,c){if(this.utils.isValueFalsyInNature(b)||this.utils.isValueFalsyInNature(c)||"number"!=typeof b||"number"!=typeof c)throw new Error("minLength and maxLength must both be numerical values in the `digitsLengthBetween` validation.");return"number"!=typeof a?!1:(fieldValueLength=String(a).length,fieldValueLength>=b&&c>=fieldValueLength)},email:function(a){var b=/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,10})+$/;return b.test(a)},ipvFour:function(a){var b,c=255;return b=a.match(/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/),null!=b&&b[1]<=c&&b[2]<=c&&b[3]<=c&&b[4]<=c},max:function(a,b){var c=typeof a;if(this.utils.isValueFalsyInNature(b)||"number"!=typeof b)throw new Error("max must be of numerical value in the `max` validation.");return this.utils.isValueFalsyInNature(a,!1)?!1:"number"===c?b>=a:"string"===c?a.length<=b:!1},min:function(a,b){var c=typeof a;if(this.utils.isValueFalsyInNature(b)||"number"!=typeof b)throw new Error("min must be of numerical value in the `min` validation.");return this.utils.isValueFalsyInNature(a,!1)?!1:"number"===c?a>=b:"string"===c?a.length>=b:!1},notIn:function(a,b){return!this.contains(a,b)},number:function(a){return"number"==typeof a},required:function(a){return!this.utils.isValueFalsyInNature(a,!1)},same:function(a,b,c){return!this.different(a,b,c)},url:function(a){var b=/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/;return b.test(a)}};})(window);