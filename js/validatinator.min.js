/* 
 * Copyright (c) 2013-2014 David Jenkins (Validatinator) 
 * See the file license.txt for copying permission. 
 * 
 * Simple, yet effective, vanilla JavaScript form validation "plugin." Validatinator is based off 
 * of one of PHP's most famous framework, Laravel.  Using Validatinator is as easy as instantiating 
 * a Validatinator object, calling the passes or fails methods and if there are failed validations then grabbing 
 * those validations from the errors property on the main object. 
 * 
 * Latest Update: 0.0.2beta (01/17/2014) 
 */ 
(function(window, undefined) {function Validatinator(a){this.validationInformation=void 0!==a?this.utils.convertFieldValidationsToArray(a):{},this.errors={},this.currentForm,this.currentField,this.validations.parent=this,this.messages.parent=this,this.validations.utils=this.utils,this.messages.utils=this.utils}Validatinator.prototype={fails:function(a){return!this.startValidations(a)},passes:function(a){return this.startValidations(a)},startValidations:function(a){var b,c,d,e=0;this.currentForm=a;for(fieldName in this.validationInformation[a])for(b=this.validationInformation[a][fieldName],this.currentField=fieldName;e<b.length;e++){var f,g=[];d=this.getValidationMethodAndParameters(b[e]),c=this.getCurrentFieldsValue(),f=d[0],2===d.length&&(g=d[1]),this.callValidationMethodWithParameters(f,g,c)||this.messages.addValidationErrorMessage(f,g)}return this.utils.isEmptyObject(this.errors)},getValidationMethodAndParameters:function(a){var b,c;return a.contains(":")?(b=a.split(":"),c=b.shift(),[c,this.prepareParameters(b)]):[a]},prepareParameters:function(a){for(var b=0,c=0;b<a.length;b++)if(a[b].contains(","))for(a[b]=a[b].split(",");c<a[b].length;c++)a[b][c]=this.utils.convertStringToBoolean(a[b][c].trim());else a[b]=this.utils.convertStringToBoolean(a[b].trim());return a},getCurrentFieldsValue:function(){var a,b;for(a=document.getElementsByName(this.currentField),i=0;i<a.length;i++)if(fieldElement=a[i],fieldElement.form.name===this.currentForm){b=fieldElement.value;break}if(!b&&""!==b)throw new Error("Couldn't find the field element, "+this.currentField+", for the form, "+this.currentForm+".");return b},callValidationMethodWithParameters:function(a,b,c){if(!(a in this.validations))throw new Error("Validation does not exist: "+a);return b?(b.unshift(c),this.validations[a].apply(this.validations,b)):this.validations[a](c)}},"object"==typeof window&&"object"==typeof window.document&&(window.Validatinator=Validatinator),String.prototype.contains||(String.prototype.contains=function(a,b){return-1!==String.prototype.indexOf.call(this,a,b)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(a,b){if(void 0===this||null===this)throw new TypeError('"this" is null or not defined');var c=this.length>>>0;for(b=+b||0,1/0===Math.abs(b)&&(b=0),0>b&&(b+=c,0>b&&(b=0));c>b;b++)if(this[b]===a)return b;return-1}),Validatinator.prototype.messages={validationMessages:{accepted:"This field must be accepted.",alpha:"This field only allows alpha characters.",alphaDash:"This field only allows alpha, dash and underscore characters.",alphaNum:"This field only allows alpha, dash, underscore and numerical characters.",between:"This field must be between {$0}.",confirmed:"This field must be the same as {$0}.",contains:"This field must be one of the following values, {$0}.",different:"This field must not be the same as {$0}.",digitsLength:"This field must be a numerical values and {$0} characters long.",digitsLengthBetween:"This field must be a numerical value and between {$0} characters long.",email:"This field only allows valid email addresses.",ipvFour:"This field only allows valid ipv4 addresses.",max:"This field must only be {$0} long or a numerical value must be less than or equal to {$0}.",min:"This field must be at least {$0} long or a numerical value must be greater than or equal to {$0}.",notIn:"This field must not be contained within the following values, {$0}.",number:"This field only allows valid numerical values.",required:"This field is required.",same:"This field must be the same value as {$0}.",url:"This field only allows valid urls."},addCurrentFormAndField:function(){this.parent.errors.hasOwnProperty(this.parent.currentForm)||(this.parent.errors[this.parent.currentForm]={}),this.parent.errors[this.parent.currentForm].hasOwnProperty(this.parent.currentField)||(this.parent.errors[this.parent.currentForm][this.parent.currentField]={})},addValidationErrorMessage:function(a,b){var c,d=/{(.*?)}/g;this.addCurrentFormAndField(),c=this.validationMessages[a],curlyBraceParameters=c.match(d),curlyBraceParameters&&(c=this.replaceCurlyBracesWithValues(c,curlyBraceParameters,b)),this.parent.errors[this.parent.currentForm][this.parent.currentField][a]=c},replaceCurlyBracesWithValues:function(a,b,c){var d,e,f=0;for(""===c[0]&&c.shift();f<b.length;f++)d=c[f],e="{$"+f+"}",(a.contains(e)||null!==d||void 0!==d)&&(a=this.utils.isValueAnArray(c[f])?a.split(e).join(this.utils.convertArrayValuesToEnglishString(d)):a.split(e).join(d));return a}},Validatinator.prototype.validations={accepted:function(a){return this.utils.isValueFalsyInNature(a)?!1:(a="string"==typeof a?a.toLowerCase():a,"yes"===a||"on"===a||a)},alpha:function(a){var b=/^[a-zA-Z]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},alphaDash:function(a){var b=/^[a-zA-Z-_]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},alphaNum:function(a){var b=/^[a-zA-Z-_0-9]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},between:function(a,b){var c=typeof a,d=Number(b[0]),e=Number(b[1]);if(isNaN(d)||isNaN(e))throw new Error("min and max must both be numbers in the `between` validation.");return"number"===c?a>=d&&e>=a:"string"===c?d<=a.length&&a.length<=e:!1},confirmed:function(a,b,c){return(void 0===c||null===c)&&(c=!0),a=String(a),b=String(b),c?a===b:a.toLowerCase()===b.toLowerCase()},contains:function(a,b){return-1!==b.indexOf(a)},different:function(a,b,c){return!this.confirmed(a,b,c)},digitsLength:function(a,b){if(b=Number(b),!b||isNaN(b))throw new Error("length must be of numerical value in the `digitsLength` validation.");return a=Number(a),isNaN(a)?!1:String(a).length===b},digitsLengthBetween:function(a,b){var c=Number(b[0]),d=Number(b[1]);if(this.utils.isValueFalsyInNature(c)||this.utils.isValueFalsyInNature(d)||isNaN(c)||isNaN(d))throw new Error("minLength and maxLength must both be numerical values in the `digitsLengthBetween` validation.");return a=Number(a),0/0===a?!1:(fieldValueLength=String(a).length,fieldValueLength>=c&&d>=fieldValueLength)},email:function(a){var b=/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,10})+$/;return b.test(a)},ipvFour:function(a){var b,c=255;return b=a.match(/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/),null!=b&&b[1]<=c&&b[2]<=c&&b[3]<=c&&b[4]<=c},max:function(a,b){var c=typeof a;if(b=Number(b),this.utils.isValueFalsyInNature(b)||isNaN(b))throw new Error("max must be of numerical value in the `max` validation.");return this.utils.isValueFalsyInNature(a,!1)?!1:"number"===c?b>=a:"string"===c?a.length<=b:!1},min:function(a,b){var c=typeof a;if(b=Number(b),this.utils.isValueFalsyInNature(b)||isNaN(b))throw new Error("min must be of numerical value in the `min` validation.");return this.utils.isValueFalsyInNature(a,!1)?!1:"number"===c?a>=b:"string"===c?a.length>=b:!1},notIn:function(a,b){return!this.contains(a,b)},number:function(a){return a=Number(a),!isNaN(a)},required:function(a){return!this.utils.isValueFalsyInNature(a,!1)},same:function(a,b,c){return!this.different(a,b,c)},url:function(a){var b=/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/;return b.test(a)}},Validatinator.prototype.utils={convertFieldValidationsToArray:function(a){var b;for(formName in a)for(fieldName in a[formName])b=a[formName][fieldName],a[formName][fieldName]=b.contains("|")?b.split("|"):[b];return a},convertStringToBoolean:function(a){return"string"!=typeof a?a:"false"===a.toLowerCase()?!1:"true"===a.toLowerCase()?!0:a},convertArrayValuesToEnglishString:function(a){for(var b,c=0,d="";c<a.length;c++)b=c+1,d+=b===a.length?" and "+a[c]:0===c?a[c]:", "+a[c];return d},isValueFalsyInNature:function(a,b){return(void 0===b||null===b)&&(b=!0),void 0===a||null===a||""===a?!0:b?!a:a===!1},isValueAnArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0}};})(window);