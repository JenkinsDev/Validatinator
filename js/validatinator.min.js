/*
 * Validatinator 
 * Simple yet effective vanilla JavaScript front-end validation add-on.
 * 01/04/2014
 */
 (function(window, undefined) {function Validatinator(a){this.validationInformation=void 0!==this.utils.isValueFalsyInNature(a)?this.utils.convertFieldValidationsToArray(a):{},this.errors={},this.currentValidatingForm,this.currentValidatingField,this.validations.parent=this,this.validations.utils=this.utils,this.fails=function(a){this.getValidationArray(a)},this.passes=function(a){this.getValidationArray(a)},this.getValidationArray=function(a){var b;this.currentValidatingForm=a;for(b in this.validationInformation[a])this.currentValidatingField=b,this.testValidationArray(this.validationInformation[a][b])},this.testValidationArray=function(a){var b,c,d;for(b=document.getElementsByName(this.currentValidatingForm)[0],c=b.getElementsByName(this.currentValidatingField)[0].value,d=0;d<a.length;d++){if(!(a[d]in this.validations))throw new Error("Validation does not exist: "+a[d]);this.validations[a[d]](c)}}}String.prototype.contains||(String.prototype.contains=function(a,b){return-1!==String.prototype.indexOf.call(this,a,b)}),"object"==typeof window&&"object"==typeof window.document&&(window.Validatinator=Validatinator),Validatinator.prototype.utils={convertFieldValidationsToArray:function(a){var b;for(formName in a)for(fieldName in a[formName])b=a[formName][fieldName],console.log(b),a[formName][fieldName]=b.contains("|")?b.split("|"):[b];return a},isValueFalsyInNature:function(a,b){return(void 0===b||null===b)&&(b=!0),void 0===a||null===a||""===a?!0:b?!a:a===!1}},Validatinator.prototype.validations={accepted:function(a){return this.utils.isValueFalsyInNature(a)?!1:(a="string"==typeof a?a.toLowerCase():a,"yes"===a||"on"===a||a)},alpha:function(a){var b=/^[a-zA-Z]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},alphaDash:function(a){var b=/^[a-zA-Z-_]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},alphaNum:function(a){var b=/^[a-zA-Z-_0-9]+$/;return this.utils.isValueFalsyInNature(a)?!1:b.test(a)},between:function(a,b,c){var d=typeof a;if("number"!=typeof b||"number"!=typeof c)throw new Error("min and max must both be numbers in the `between` validation.");return"number"===d?a>=b&&c>=a:"string"===d?b<=a.length&&a.length<=c:!1},confirmed:function(a,b,c){return(void 0===c||null===c)&&(c=!0),a=String(a),differentFieldValue=String(b),c?a===b:a.toLowerCase()===b.toLowerCase()},different:function(a,b,c){return!this.confirmed(a,b,c)},digitsLength:function(a,b){if(void 0===b||null===b||"number"!=typeof b)throw new Error("length must be of numerical value in the `digitsLength` validation.");return"number"!=typeof a?!1:String(a).length===b},digitsLengthBetween:function(a,b,c){if(this.utils.isValueFalsyInNature(b)||this.utils.isValueFalsyInNature(c)||"number"!=typeof b||"number"!=typeof c)throw new Error("minLength and maxLength must both be numerical values in the `digitsLengthBetween` validation.");return"number"!=typeof a?!1:(fieldValueLength=String(a).length,fieldValueLength>=b&&c>=fieldValueLength)},email:function(a){var b=/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,10})+$/;return b.test(a)},ipvFour:function(a){var b,c=255;return b=a.match(/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/),null!=b&&b[1]<=c&&b[2]<=c&&b[3]<=c&&b[4]<=c},max:function(a,b){var c=typeof a;if(this.utils.isValueFalsyInNature(b)||"number"!=typeof b)throw new Error("max must be of numerical value in the `max` validation.");return this.utils.isValueFalsyInNature(a,!1)?!1:"number"===c?a>=b:"string"===c?a.length>=b:!1},min:function(a,b){var c=typeof a;if(this.utils.isValueFalsyInNature(b)||"number"!=typeof b)throw new Error("min must be of numerical value in the `min` validation.");return this.utils.isValueFalsyInNature(a,!1)?!1:"number"===c?a>=b:"string"===c?a.length>=b:!1},number:function(a){return"number"==typeof a},required:function(a){return!this.utils.isValueFalsyInNature(a,!1)}};})(window);