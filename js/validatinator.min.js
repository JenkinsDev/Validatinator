/*
 * Validatinator 
 * Simple yet effective vanilla JavaScript front-end validation add-on.
 * 12/26/2013
 */
 (function(window, undefined) {function Validatinator(a){this.validationInformation=void 0!==typeof a?this.utils.convertFieldValidationsToArray(a):{},this.errors={},this.currentValidatingForm,this.currentValidatingField,this.utils.parent=this,this.validations.parent=this,this.fails=function(a){this.getValidationArray(a)},this.passes=function(a){this.getValidationArray(a)},this.getValidationArray=function(a){var b;this.currentValidatingForm=a;for(b in this.validationInformation[a])this.currentValidatingField=b,this.testValidations(this.validationInformation[a][b])},this.testValidationArray=function(a){var b,c,d;for(b=document.getElementsByName(this.currentValidatingForm)[0],c=b.getElementsByName(this.currentValidatingField)[0].value,d=0;d<a.length;d++){if(!(a[d]in this.validations))throw new Error("Validation does not exist: "+a[d]);this.validations[a[d]](c)}}}"contains"in String.prototype||(String.prototype.contains=function(a,b){return-1!==String.prototype.indexOf.call(this,a,b)}),"object"==typeof window&&"object"==typeof window.document&&(window.Validatinator=Validatinator),Validatinator.prototype.utils={getRealType:function(a){var b=(typeof a).toLowerCase();return"object"===b?null===a?null:a.constructor.name.toLowerCase():b},convertFieldValidationsToArray:function(a){var b;for(formName in a)for(fieldName in a[formName])b=a[formName][fieldName],"array"!==this.getRealType(b)&&(a[formName][fieldName]=b.contains("|")?b.split("|"):[b]);return a},isValueFalsyInNature:function(a,b){return(void 0===b||null===b)&&(b=!0),void 0===a||null===a||""===a?!0:b?a?!1:!0:a===!1?!0:!1}},Validatinator.prototype.validations={accepted:function(a){return this.parent.utils.isValueFalsyInNature(a)?!1:(a="string"==typeof a?a.toLowerCase():a,"yes"===a||"on"===a||a)},alpha:function(a){var b=/^[a-zA-Z]+$/;return this.parent.utils.isValueFalsyInNature(a)?!1:b.test(a)},alphaDash:function(a){var b=/^[a-zA-Z-_]+$/;return this.parent.utils.isValueFalsyInNature(a)?!1:b.test(a)},alphaNum:function(a){var b=/^[a-zA-Z-_0-9]+$/;return this.parent.utils.isValueFalsyInNature(a)?!1:b.test(a)},between:function(a,b,c){var d=this.parent.utils.getRealType(a);if("number"!==this.parent.utils.getRealType(b)||"number"!==this.parent.utils.getRealType(c))throw new Error("minLength and maxLength must both be numbers in the `between` validation.");return"string"!==d&&"number"!==d?!1:(a="number"===d?String(a):a,b<=a.length&&a.length<=c?!0:!1)},confirmed:function(a,b,c){return(void 0===c||null===c)&&(c=!0),c?a===b:a.toLowerCase()===b.toLowerCase()},different:function(a,b,c){return(void 0===c||null===c)&&(c=!0),a=String(a),b=String(b),c?!(a===b):!(a.toLowerCase()===b.toLowerCase())},required:function(a){return!this.parent.utils.isValueFalsyInNature(a,!1)}};})(window);